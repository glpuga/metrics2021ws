<launch>

  <param name="/use_sim_time" value="true" />

  <!-- absolute path to the bag_file -->
  <arg name="bag_file" />
  <!-- absolute path to the results file -->
  <arg name="output_file" />
  <!-- absolute path to the ground truth record -->
  <arg name="ground_truth_file" default="" />
  <!-- enable competition mode -->
  <arg name="competition_mode" default="false" />

  <arg name="loop" default="false" />
  <arg name="enable_rviz" default="true" />

  <arg name="openvslam_config_file" value="metrics2021_rgbd.yaml" /> 
  
  <arg name="log_ground_truth" default="false" if="$(arg competition_mode)" />
  <arg name="log_ground_truth" default="true"  unless="$(arg competition_mode)" />

  <include file="$(find tij_challenger)/launch/metrics_sensors_transformations.launch" />

  <include file="$(find tij_challenger)/launch/replay_dataset_pipeline.launch">
    <arg name="bag_file" value="$(arg bag_file)" />
    <arg name="loop" value="$(arg loop)" />
  </include>

  <include file="$(find tij_challenger)/launch/rviz.launch" if="$(eval enable_rviz)">
    <arg name="rviz_config" value="$(find tij_challenger)/config/config.rviz" />
  </include>

  <!-- OpenVSLAM -->
  <group ns="OpenVSLAM" if="false">
    <node pkg="openvslam_ros" type="run_slam" name="openvslam"
          args="-v /home/metrics/data/orb_vocab.fbow -c $(find tij_challenger)/config/$(arg openvslam_config_file)"
          output="screen">
      <remap from="camera/color/image_raw" to="/camera/color/decompressed" />
      <remap from="camera/depth/image_raw" to="/camera/depth_registered/image_rect_raw" />
      <remap from="~pose" to="/odometry/final" />
      <param name="odom_frame" value="base_link" />
      <param name="map_frame"  value="odom" />
      <param name="publish_tf" value="true" />
    </node>
  
    <node pkg="tij_challenger" type="recorder.py" name="recorder" 
          output="screen" required="true">

      <param name="log_ground_truth"  value="$(arg log_ground_truth)" />
      <param name="log_stamped_traj"  value="true" />

      <param name="stamped_ground_truth_file"
             value="$(arg ground_truth_file)" />
      <param name="stamped_traj_file"
             value="$(arg output_file)" />
    </node>
  </group>

  <!-- OpenVSLAM with IMU integration using robot_localization -->
  <group ns="OpenVSLAM_with_IMU" if="true">
    <node pkg="openvslam_ros" type="run_slam" name="openvslam_odom"
          args="-v /home/metrics/data/orb_vocab.fbow -c $(find tij_challenger)/config/$(arg openvslam_config_file)"
          output="screen">
      <remap from="camera/color/image_raw" to="/camera/color/decompressed" />
      <remap from="camera/depth/image_raw" to="/camera/depth_registered/image_rect_raw" />
      <remap from="~pose" to="/odometry/visual_odometry" />
      <param name="odom_frame" value="base_link" />
      <param name="map_frame"  value="odom" />
      <param name="publish_tf" value="false" />
    </node>

    <!-- Robot-Localization, fuses IMU data with visual odometry -->
    <node pkg="robot_localization" type="ukf_localization_node" name="ukf_localization_node" output="screen">
      <remap from="odometry/filtered"  to="/odometry/final" />

      <!-- reference frames. Remember we are using a fixed odom == world static link -->
      <param name="world_frame"     value="odom" />
      <param name="odom_frame"      value="odom" />
      <param name="base_link_frame" value="base_link" />

      <!-- publish odom to base_link -->
      <param name="publish_tf" value="true" />

      <!-- visual odometry from RTABMap RGBD Odom -->
      <param name="odom0" value="/odometry/visual_odometry" />
      <param name="odom0_differential" value="true" />
      <rosparam param="odom0_config">
        [true,  true,  true,
         true,  true,  true,
         false, false, false,
         false, false, false,
         false, false, false]</rosparam>

      <!-- gyro, angular speeds only -->
      <param name="imu0" value="/camera/gyro/sample" />
      <rosparam param="imu0_config">
        [false, false, false,
         false, false, false,
         false, false, false,
         true,   true,  true,
         false, false, false]</rosparam>

      <!-- dji imu, linear accel and angular velocity -->
      <!-- <param name="imu1" value="/dji_sdk/imu" />
      <param name="imu1_remove_gravitational_acceleration" value="true" />
      <rosparam param="imu1_config">
       [false, false, false,
        false, false, false,
        false, false, false,
        true,   true,  true,
        true,   true,  true]</rosparam> -->

      <!-- 
        LINEAR ACCELERATION FROM THE D435I IS REALLY CRAPPY
        DONT ENABLE!
       -->
      <!-- linear accel imu, only linear accel -->
      <param name="imu1" value="/camera/accel/sample" />
      <param name="imu1_remove_gravitational_acceleration" value="true" />
      <rosparam param="imu1_config">
        [false, false, false,
         false, false, false,
         false, false, false,
         false, false, false,
         true,   true,  true]</rosparam>

      <rosparam param="initial_state">
        [0.0,  0.0,  0.0,
         0.0,  0.0,  0.0,
         0.0,  0.0,  0.0,
         0.0,  0.0,  0.0,
         0.0,  0.0,  0.0]</rosparam>
    </node>

    <node pkg="tij_challenger" type="recorder.py" name="recorder" output="screen" required="true">

      <param name="log_ground_truth" value="$(arg log_ground_truth)" />
      <param name="log_stamped_traj" value="true" />

      <param name="stamped_ground_truth_file" value="$(arg ground_truth_file)" />
      <param name="stamped_traj_file" value="$(arg output_file)" />
    </node>
  </group>

  <!-- RTABMap RGBD Odom -->
  <group ns="RTABMap_rgbd_odom" if="false">
    <node pkg="rtabmap_ros" type="rgbd_odometry" name="rtabmap_rgbd_odom" output="screen">
      <remap from="rgb/image"       to="/camera/color/decompressed" />
      <remap from="rgb/camera_info" to="/camera/color/camera_info" />
      <remap from="depth/image"     to="/camera/depth_registered/image_rect_raw" />
      <remap from="odom"            to="/odometry/final" />

      <param name="approx_sync"     value="false" />
      <param name="frame_id"        value="base_link" />
      <param name="odom_frame_id"   value="odom" />
      <param name="publish_tf"      value="true" />
    </node>

    <node pkg="tij_challenger" type="recorder.py" name="recorder" output="screen" required="true">

      <param name="log_ground_truth" value="$(arg log_ground_truth)" />
      <param name="log_stamped_traj" value="true" />

      <param name="stamped_ground_truth_file" value="$(arg ground_truth_file)" />
      <param name="stamped_traj_file" value="$(arg output_file)" />
    </node>
  </group>

  <!-- RTABMap SLAM and sensor fusion -->
  <group ns="RTABMap_SLAM" if="false">

    <!-- RTABMap RGBD Odom, provides visual_odom to base_link transform -->
    <node pkg="rtabmap_ros" type="rgbd_odometry" name="rtabmap_rgbd_odom" output="screen">
      <remap from="rgb/image"       to="/camera/color/decompressed" />
      <remap from="rgb/camera_info" to="/camera/color/camera_info" />
      <remap from="depth/image"     to="/camera/depth_registered/image_rect_raw" />
      <remap from="odom"            to="/odometry/visual_odometry" />
      <param name="Vis/MaxDepth"    value="10.0"/>
      <param name="approx_sync"     value="false" />
      <param name="frame_id"        value="base_link" />
      <param name="odom_frame_id"   value="visual_odom" />
      <param name="publish_tf"      value="false" />
    </node>

    <!-- Robot-Localization, fuses IMU data with visual odometry -->
    <node pkg="robot_localization" type="ukf_localization_node" name="ukf_localization_node" output="screen">
      <remap from="odometry/filtered"  to="/odometry/filtered" />

      <!-- reference frames. Remember we are using a fixed odom == world static link -->
      <param name="world_frame"     value="filtered_odom" />
      <param name="odom_frame"      value="filtered_odom" />
      <param name="base_link_frame" value="base_link" />

      <!-- publish odom to base_link -->
      <param name="publish_tf" value="true" />

      <!-- visual odometry from RTABMap RGBD Odom -->
      <!-- TODO figure if this provides velocity -->
      <param name="odom0" value="/odometry/visual_odometry" />
      <param name="odom0_differential" value="true" />
      <rosparam param="odom0_config">
        [true,  true,  true,
         true,  true,  true,
         false, false, false,
         false, false, false,
         false, false, false]</rosparam>

      <!-- gyro, angular speeds only -->
      <param name="imu0" value="/camera/gyro/sample" />
      <rosparam param="imu0_config">
        [false, false, false,
         false, false, false,
         false, false, false,
         true,   true,  true,
         false, false, false]</rosparam>

      <!-- dji imu, linear accel and angular velocity -->
      <param name="imu1" value="/dji_sdk/imu" />
      <param name="imu1_remove_gravitational_acceleration" value="true" />
      <rosparam param="imu1_config">
       [false, false, false,
        false, false, false,
        false, false, false,
        true,   true,  true,
        true,   true,  true]</rosparam>

      <!-- 
        LINEAR ACCELERATION FROM THE D435I IS REALLY CRAPPY
        DONT ENABLE!
       -->
      <!-- linear accel imu, only linear accel -->
      <!-- <param name="imu2" value="/camera/accel/sample" />
      <param name="imu2_remove_gravitational_acceleration" value="true" />
      <rosparam param="imu2_config">
        [false, false, false,
         false, false, false,
         false, false, false,
         false, false, false,
         true,   true,  true]</rosparam> -->

      <rosparam param="initial_state">
        [0.0,  0.0,  0.0,
         0.0,  0.0,  0.0,
         0.0,  0.0,  0.0,
         0.0,  0.0,  0.0,
         0.0,  0.0,  0.0]</rosparam>
    </node>

    <node pkg="rtabmap_ros" type="rtabmap" name="rtabmap_slam" args="-d" output="screen">
      <remap from="rgb/image"        to="/camera/color/decompressed" />
      <remap from="rgb/camera_info"  to="/camera/color/camera_info" />
      <remap from="depth/image"      to="/camera/depth_registered/image_rect_raw" />
      <remap from="odom"             to="/odometry/filtered" />

      <param name="Vis/MaxDepth"     value="10.0"/>

      <param name="subscribe_depth"  value="true" />
      <param name="odom_sensor_sync" value="true" />

      <param name="approx_sync"      value="false" />
      <param name="frame_id"         value="base_link" />
      <param name="odom_frame_id"    value="filtered_odom" />
      <param name="map_frame_id"     value="vicon" />

      <param name="publish_tf" value="true" />
    </node> 

    <node pkg="tij_challenger" type="recorder.py" name="recorder" output="screen" required="true">

      <param name="log_ground_truth" value="$(arg log_ground_truth)" />
      <param name="log_stamped_traj" value="true" />

      <param name="stamped_ground_truth_file" value="$(arg ground_truth_file)" />
      <param name="stamped_traj_file" value="$(arg output_file)" />
    </node>
  </group>

</launch>