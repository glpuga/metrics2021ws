<launch>

  <arg name="bag_file" />
  <arg name="loop" default="false" />

  <arg if="$(eval loop==true)" name="loop_args" value="--loop" />
  <arg unless="$(eval loop==true)" name="loop_args" value="" />

  <node name="rosbag_replayer" pkg="rosbag" type="play" respawn="false"
        args="--clock $(arg loop_args) $(arg bag_file)"
        output="screen" required="true" />

  <!-- scale depth data with the factor to correct measurements -->
  <node name="scale_depth_image" pkg="tij_challenger" type="depth_scaler.py"
        respawn="false" output="screen">
    <remap from="input_depth_image"  to="/camera/depth/image_rect_raw" />
    <remap from="output_depth_image" to="/camera/depth/image_rect_raw_scaled" />s
  </node>

  <!-- Decompress the color video feed -->
  <node name="decompress_image" pkg="image_transport" type="republish" args="compressed in:=/camera/color/image_raw raw out:=/camera/color/decompressed" respawn="false" output="screen"></node>

  <!-- Start the nodelet manager node -->
  <node pkg="nodelet" type="nodelet" name="nodelet_manager" args="manager" />

  <!-- Rectify the color image using the camera parameters. Needs the decompressed video feed -->
  <node pkg="nodelet" type="nodelet" name="rectify_color_image" args="load image_proc/rectify nodelet_manager" output="screen">
    <remap from="image_rect" to="/camera/color/rectified" />
    <remap from="image_mono" to="/camera/color/decompressed" />
    <remap from="camera_info" to="/camera/color/camera_info" />
  </node>

  <!-- Register the depth image to the color feed.
       TODO this depends on a transform I made up (color to depth) -->
  <node pkg="nodelet" type="nodelet" name="register_color_image" args="load depth_image_proc/register nodelet_manager" output="screen">
    <remap from="rgb/camera_info" to="/camera/color/camera_info" />
    <remap from="depth/camera_info" to="/camera/depth/camera_info" />
    <remap from="depth/image_rect" to="/camera/depth/image_rect_raw_scaled" />
    <remap from="depth_registered/camera_info" to="/camera/depth_registered/camera_info" />
    <remap from="depth_registered/image_rect" to="/camera/depth_registered/image_rect_raw" />
  </node>

  <!-- Create a colorified point cloud from the color feed and the depth map -->
  <node pkg="nodelet" type="nodelet" name="cloudify_depth_image" args="load depth_image_proc/point_cloud_xyzrgb nodelet_manager" output="screen">
    <remap from="depth_registered/points" to="/camera/points" />
    <remap from="rgb/image_rect_color" to="/camera/color/decompressed" />
    <remap from="rgb/camera_info" to="/camera/color/camera_info" />
    <remap from="depth_registered/image_rect" to="/camera/depth_registered/image_rect_raw" />
  </node>

  <!-- create a pseudo-laserscan topic based on the depth data to compare laser and deptimage scales -->
  <node name="depth_to_laserscan" pkg="depthimage_to_laserscan" type="depthimage_to_laserscan"
        respawn="false" output="screen">
    <remap from="image"       to="/camera/depth_registered/image_rect_raw" />
    <remap from="camera_info" to="/camera/depth_registered/camera_info" />
    <remap from="scan"        to="/camera/depth_registered/scan" />
    <param name="~output_frame_id" value="base_link"/>
    <param name="~range_max"   value="10"/>
  </node>

</launch>